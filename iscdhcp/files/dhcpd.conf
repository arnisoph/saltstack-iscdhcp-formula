{%- from "iscdhcp/defaults.yaml" import rawmap with context -%}
{%- set datamap = salt['grains.filter_by'](rawmap, merge=salt['pillar.get']('iscdhcp:lookup')) -%}

{%- if datamap.config.dhcpd.file_prepend is defined -%}
{{ datamap.config.dhcpd.file_prepend }}

{% endif -%}

{%- if datamap.config.dhcpd.omapi_port is defined -%}
omapi-port {{ datamap.config.dhcpd.omapi_port }};
{% endif -%}

# The ddns-updates-style parameter controls whether or not the server will
# attempt to do a DNS update when a lease is confirmed. We default to the
# behavior of the version 2 packages ('none', since DHCP v2 didn't
# have support for DDNS.)
ddns-update-style {{ datamap.config.dhcpd.ddns_update_style|default('none') }};

{%- if datamap.config.dhcpd.ddns_updates is defined %}
ddns-updates {{ datamap.config.dhcpd.ddns_updates }};
{%- endif -%}

{%- if datamap.config.dhcpd.update_static_leases is defined %}
update-static-leases {{ datamap.config.dhcpd.update_static_leases }};
{%- endif -%}

{%- if datamap.config.dhcpd.use_host_decl_names is defined %}
use-host-decl-names {{ datamap.config.dhcpd.use_host_decl_names }};
{{- "\n" }}
{%- endif -%}

{%- if datamap.config.dhcpd.zones is defined -%}
  {%- for z in datamap.config.dhcpd.zones|default({}) %}
zone {{ z.name }} {
  primary {{ z.primary }};
    {%- if 'key' in z %}
  key {{ z.key|default('rndc-key') }};
    {%- endif %}
}
{{- "\n" }}
  {%- endfor -%}
{%- endif %}

default-lease-time {{ datamap.config.dhcpd.default_lease_time|default('600') }};
max-lease-time {{ datamap.config.dhcpd.max_lease_time|default('7200') }};

{%- if datamap.config.dhcpd.authoritative|default(False) %}
# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;
{%- endif %}

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility {{ datamap.config.dhcpd.log_facility|default('local7') }};

{%- if datamap.config.dhcpd.next_server is defined -%}
{{ "\n" }}
next-server {{ datamap.config.dhcpd.next_server }};
{%- endif -%}

{%- if datamap.config.dhcpd.filename is defined %}
filename "{{ datamap.config.dhcpd.filename }}";
{{- "\n" }}
{%- endif -%}

{%- if datamap.config.dhcpd.allow is defined -%}
  {%- for a in datamap.config.dhcpd.allow|default([]) %}
allow {{ a }};
  {%- endfor -%}
{{ "\n" }}
{%- endif -%}

{%- if datamap.config.dhcpd.deny is defined -%}
  {%- for d in datamap.config.dhcpd.deny|default([]) %}
deny {{ d }};
  {%- endfor -%}
{{ "\n" }}
{%- endif -%}

{%- if datamap.config.dhcpd.ignore is defined -%}
  {%- for i in datamap.config.dhcpd.ignore|default([]) %}
ignore {{ i }};
  {%- endfor -%}
{{ "\n" }}
{%- endif -%}

{%- set options = datamap.config.dhcpd.default_options|default([]) -%}
{%- if datamap.config.dhcpd.options is defined -%}
  {%- do options.extend(datamap.config.dhcpd.options) -%}
{%- endif -%}

# option definitions common to all supported networks...
{%- for o in options %}
option {{ o }};
{%- endfor -%}
{%- set options = [] -%}

{%- if datamap.config.dhcpd.default_includes is defined -%}
  {%- set includes = datamap.config.dhcpd.default_includes -%}
{%- endif -%}
{%- if datamap.config.dhcpd.includes is defined -%}
  {%- do includes.extend(datamap.config.dhcpd.includes) -%}
{%- endif -%}
{{ "\n" }}

{%- for i in includes %}
include "{{ i }}";
{%- endfor -%}
{%- set includes = [] -%}

{%- if datamap.config.dhcpd.file_append is defined %}

{{ datamap.config.dhcpd.file_append }}
{%- endif -%}
